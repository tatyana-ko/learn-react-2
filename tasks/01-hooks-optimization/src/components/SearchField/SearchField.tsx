import React from 'react';


interface Props {
  onSearch: (query: string) => Promise<void>;
  isLoading: boolean;
}

/**
 * üîç –ü–æ–∏—Å–∫–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
 * 
 * –ü–æ–¥—É–º–∞–π—Ç–µ:
 * 
 * 1. –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:
 *    - –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤–≤–æ–¥–µ —Å–∏–º–≤–æ–ª–∞?
 *    - –ü–æ—á–µ–º—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–∂–µ—Ç —Ç–æ—Ä–º–æ–∑–∏—Ç—å?
 *    - –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–∞–¥–µ—Ä–∂–∫–∏?
 * 
 * 2. –ü–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã:
 *    - –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –±—ã—Å—Ç—Ä–æ–º –≤–≤–æ–¥–µ?
 *    - –ö—É–¥–∞ –¥–µ–≤–∞—é—Ç—Å—è —Å—Ç–∞—Ä—ã–µ –∑–∞–ø—Ä–æ—Å—ã?
 *    - –ß—Ç–æ —Å–ª—É—á–∏—Ç—Å—è –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞?
 * 
 * 3. UX:
 *    - –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–π–º–µ—Ç —á—Ç–æ –∏–¥–µ—Ç –ø–æ–∏—Å–∫?
 *    - –ß—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –µ—Å–ª–∏ –ø–æ–∏—Å–∫ –Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤?
 *    - –ö–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏?
 * 
 * üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞:
 * –ü–æ–Ω–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º –ø–æ–∏—Å–∫–∞ –≤ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö.
 * –ö–∞–∫ –æ–Ω–∏ —Ä–µ—à–∞—é—Ç —ç—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã?
 */
export const SearchField: React.FC<Props> = ({ onSearch, isLoading }) => {

 


  return <div>
    {/* <UserSearch /> */}

    {/* <DataVisualizer /> */}
    
  </div>;
};


//================================

// import React, { useState, useEffect } from 'react';
// import { useDebounce } from '../../hooks/useDebounce';  // –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ö—É–∫ –¥–µ–±–∞—É–Ω—Å–∞

// interface Props {
//   onSearch: (query: string) => Promise<void>;
//   isLoading: boolean;
// }

// export const SearchField: React.FC<Props> = ({ onSearch, isLoading }) => {
//   const [query, setQuery] = useState('');
//   const debouncedQuery = useDebounce(query, 500);  // –ø—Ä–∏–º–µ–Ω—è–µ–º –¥–µ–±–∞—É–Ω—Å –Ω–∞ 500 –º—Å

//   useEffect(() => {
//     if (debouncedQuery) {
//       onSearch(debouncedQuery);
//     }
//   }, [debouncedQuery, onSearch]);

//   return (
//     <div>
//       <input
//         type="text"
//         value={query}
//         onChange={(e) => setQuery(e.target.value)}
//         placeholder="–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..."
//       />
//       {isLoading && <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>}
//     </div>
//   );
// };